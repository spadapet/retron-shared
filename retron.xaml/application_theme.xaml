<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Font -->
    <FontFamily x:Key="Font.Family.Default">Fonts/#Robotron 2084</FontFamily>
    <FontFamily x:Key="Font.Family.Small">Fonts/#Robotron 2084 Small</FontFamily>
    <sys:Double x:Key="Font.Size.Header">8</sys:Double>
    <sys:Double x:Key="Font.Size.Normal">8</sys:Double>
    <sys:Double x:Key="Font.Size.Small">8</sys:Double>

    <!-- Palette in RGB -->
    <Color x:Key="Color.224">#000000</Color>
    <Color x:Key="Color.225">#1D2B53</Color>
    <Color x:Key="Color.226">#7E2553</Color>
    <Color x:Key="Color.227">#008751</Color>
    <Color x:Key="Color.228">#AB5236</Color>
    <Color x:Key="Color.229">#5F574F</Color>
    <Color x:Key="Color.230">#C2C3C7</Color>
    <Color x:Key="Color.231">#FFF1E8</Color>
    <Color x:Key="Color.232">#FF004D</Color>
    <Color x:Key="Color.233">#FFA300</Color>
    <Color x:Key="Color.234">#FFEC27</Color>
    <Color x:Key="Color.235">#00E436</Color>
    <Color x:Key="Color.236">#29ADFF</Color>
    <Color x:Key="Color.237">#83769C</Color>
    <Color x:Key="Color.238">#FF77A8</Color>
    <Color x:Key="Color.239">#FFCCAA</Color>
    <Color x:Key="Color.240">#291814</Color>
    <Color x:Key="Color.241">#111D35</Color>
    <Color x:Key="Color.242">#422136</Color>
    <Color x:Key="Color.243">#125359</Color>
    <Color x:Key="Color.244">#742F29</Color>
    <Color x:Key="Color.245">#49333B</Color>
    <Color x:Key="Color.246">#A28879</Color>
    <Color x:Key="Color.247">#F3EF7D</Color>
    <Color x:Key="Color.248">#BE1250</Color>
    <Color x:Key="Color.249">#FF6C24</Color>
    <Color x:Key="Color.250">#A8E72E</Color>
    <Color x:Key="Color.251">#00B543</Color>
    <Color x:Key="Color.252">#065AB5</Color>
    <Color x:Key="Color.253">#754665</Color>
    <Color x:Key="Color.254">#FF6E59</Color>
    <Color x:Key="Color.255">#FF9D81</Color>

    <SolidColorBrush x:Key="Brush.224" Color="{StaticResource Color.224}" />
    <SolidColorBrush x:Key="Brush.225" Color="{StaticResource Color.225}" />
    <SolidColorBrush x:Key="Brush.226" Color="{StaticResource Color.226}" />
    <SolidColorBrush x:Key="Brush.227" Color="{StaticResource Color.227}" />
    <SolidColorBrush x:Key="Brush.228" Color="{StaticResource Color.228}" />
    <SolidColorBrush x:Key="Brush.229" Color="{StaticResource Color.229}" />
    <SolidColorBrush x:Key="Brush.230" Color="{StaticResource Color.230}" />
    <SolidColorBrush x:Key="Brush.231" Color="{StaticResource Color.231}" />
    <SolidColorBrush x:Key="Brush.232" Color="{StaticResource Color.232}" />
    <SolidColorBrush x:Key="Brush.233" Color="{StaticResource Color.233}" />
    <SolidColorBrush x:Key="Brush.234" Color="{StaticResource Color.234}" />
    <SolidColorBrush x:Key="Brush.235" Color="{StaticResource Color.235}" />
    <SolidColorBrush x:Key="Brush.236" Color="{StaticResource Color.236}" />
    <SolidColorBrush x:Key="Brush.237" Color="{StaticResource Color.237}" />
    <SolidColorBrush x:Key="Brush.238" Color="{StaticResource Color.238}" />
    <SolidColorBrush x:Key="Brush.239" Color="{StaticResource Color.239}" />
    <SolidColorBrush x:Key="Brush.240" Color="{StaticResource Color.240}" />
    <SolidColorBrush x:Key="Brush.241" Color="{StaticResource Color.241}" />
    <SolidColorBrush x:Key="Brush.242" Color="{StaticResource Color.242}" />
    <SolidColorBrush x:Key="Brush.243" Color="{StaticResource Color.243}" />
    <SolidColorBrush x:Key="Brush.244" Color="{StaticResource Color.244}" />
    <SolidColorBrush x:Key="Brush.245" Color="{StaticResource Color.245}" />
    <SolidColorBrush x:Key="Brush.246" Color="{StaticResource Color.246}" />
    <SolidColorBrush x:Key="Brush.247" Color="{StaticResource Color.247}" />
    <SolidColorBrush x:Key="Brush.248" Color="{StaticResource Color.248}" />
    <SolidColorBrush x:Key="Brush.249" Color="{StaticResource Color.249}" />
    <SolidColorBrush x:Key="Brush.250" Color="{StaticResource Color.250}" />
    <SolidColorBrush x:Key="Brush.251" Color="{StaticResource Color.251}" />
    <SolidColorBrush x:Key="Brush.252" Color="{StaticResource Color.252}" />
    <SolidColorBrush x:Key="Brush.253" Color="{StaticResource Color.253}" />
    <SolidColorBrush x:Key="Brush.254" Color="{StaticResource Color.254}" />
    <SolidColorBrush x:Key="Brush.255" Color="{StaticResource Color.255}" />

    <!-- Theme colors -->
    <Color x:Key="Color.Black">#000000</Color> <!-- Color.224 -->
    <Color x:Key="Color.White">#FFF1E8</Color> <!-- Color.231 -->
    
    <Color x:Key="Color.Gray0">#422136</Color> <!-- Color.242 -->
    <Color x:Key="Color.Gray1">#422136</Color> <!-- Color.242 -->
    <Color x:Key="Color.Gray2">#49333B</Color> <!-- Color.245 -->
    <Color x:Key="Color.Gray3">#49333B</Color> <!-- Color.245 -->
    <Color x:Key="Color.Gray4">#A28879</Color> <!-- Color.246 -->
    <Color x:Key="Color.Gray5">#A28879</Color> <!-- Color.246 -->
    <Color x:Key="Color.Gray6">#C2C3C7</Color> <!-- Color.230 -->
    <Color x:Key="Color.Gray7">#C2C3C7</Color> <!-- Color.230 -->
    <Color x:Key="Color.Gray8">#FFF1E8</Color> <!-- Color.231 -->
    <Color x:Key="Color.Gray9">#FFF1E8</Color> <!-- Color.231 -->
    
    <Color x:Key="Color.Accent">#29ADFF</Color> <!-- Color.236 -->
    <Color x:Key="Color.Accent0">#111D35</Color> <!-- Color.241 -->
    <Color x:Key="Color.Accent1">#1D2B53</Color> <!-- Color.225 -->
    <Color x:Key="Color.Accent2">#065AB5</Color> <!-- Color.252 -->
    <Color x:Key="Color.Accent3">#29ADFF</Color> <!-- Color.236 -->

    <!-- Theme brushes -->
    <SolidColorBrush x:Key="Brush.Window.Background" Color="{StaticResource Color.White}" />

    <SolidColorBrush x:Key="Brush.Glyph.Normal" Color="{StaticResource Color.Black}" />
    <SolidColorBrush x:Key="Brush.Glyph.Over" Color="{StaticResource Color.Gray0}" />
    <SolidColorBrush x:Key="Brush.Glyph.Pressed" Color="{StaticResource Color.White}" />
    <SolidColorBrush x:Key="Brush.Glyph.Checked" Color="{StaticResource Color.White}" />
    <SolidColorBrush x:Key="Brush.Glyph.Disabled" Color="{StaticResource Color.Gray2}" />
    <SolidColorBrush x:Key="Brush.Glyph.DisabledChecked" Color="{StaticResource Color.Gray8}" />

    <SolidColorBrush x:Key="Brush.Foreground.Normal" Color="{StaticResource Color.White}" />
    <SolidColorBrush x:Key="Brush.Foreground.Placeholder" Color="{StaticResource Color.Gray2}" />
    <SolidColorBrush x:Key="Brush.Foreground.Disabled" Color="{StaticResource Color.Gray2}" />
    <SolidColorBrush x:Key="Brush.Foreground.DisabledChecked" Color="{StaticResource Color.Accent0}" />
    <SolidColorBrush x:Key="Brush.Foreground.DisabledPlaceholder" Color="{StaticResource Color.Gray4}" />

    <SolidColorBrush x:Key="Brush.Background.Normal" Color="{StaticResource Color.Gray5}" />
    <SolidColorBrush x:Key="Brush.Background.Pressed" Color="{StaticResource Color.Gray3}" />
    <SolidColorBrush x:Key="Brush.Background.Checked" Color="{StaticResource Color.Accent2}" />
    <SolidColorBrush x:Key="Brush.Background.Popup" Color="{StaticResource Color.Gray9}" />

    <SolidColorBrush x:Key="Brush.Border.Normal" Color="{StaticResource Color.Gray3}" />
    <SolidColorBrush x:Key="Brush.Border.Over" Color="{StaticResource Color.Gray1}" />
    <SolidColorBrush x:Key="Brush.Border.Pressed" Color="{StaticResource Color.Gray2}" />
    <SolidColorBrush x:Key="Brush.Border.Checked" Color="{StaticResource Color.Accent1}" />
    <SolidColorBrush x:Key="Brush.Border.Focus" Color="{StaticResource Color.White}" />
    <SolidColorBrush x:Key="Brush.Border.Disabled" Color="{StaticResource Color.Gray5}" />
    <SolidColorBrush x:Key="Brush.Border.DisabledChecked" Color="{StaticResource Color.Accent3}" />
    <SolidColorBrush x:Key="Brush.Border.Popup" Color="{StaticResource Color.Gray6}" />

    <SolidColorBrush x:Key="Brush.Track.Normal" Color="{StaticResource Color.Gray7}" />

    <SolidColorBrush x:Key="Brush.Thumb.Normal" Color="{StaticResource Color.229}" />
    <SolidColorBrush x:Key="Brush.Thumb.Over" Color="{StaticResource Color.Gray3}" />
    <SolidColorBrush x:Key="Brush.Thumb.Pressed" Color="{StaticResource Color.Gray1}" />
    <SolidColorBrush x:Key="Brush.Thumb.Disabled" Color="{StaticResource Color.Gray5}" />

    <SolidColorBrush x:Key="Brush.Header.Normal" Color="{StaticResource Color.Gray7}" />
    <SolidColorBrush x:Key="Brush.Header.Over" Color="{StaticResource Color.Gray6}" />
    <SolidColorBrush x:Key="Brush.Header.Pressed" Color="{StaticResource Color.Gray5}" />
    <SolidColorBrush x:Key="Brush.Header.Checked" Color="{StaticResource Color.Accent3}" />
    <SolidColorBrush x:Key="Brush.Header.CheckedOver" Color="{StaticResource Color.Accent2}" />
    <SolidColorBrush x:Key="Brush.Header.CheckedPressed" Color="{StaticResource Color.Accent}" />

    <SolidColorBrush x:Key="Brush.Hyperlink.Normal" Color="{StaticResource Color.Accent2}" />
    <SolidColorBrush x:Key="Brush.Hyperlink.Over" Color="{StaticResource Color.Accent}" />

    <SolidColorBrush x:Key="Brush.TextBox.Normal" Color="{StaticResource Color.Gray9}" />
    <SolidColorBrush x:Key="Brush.TextBox.Focused" Color="{StaticResource Color.White}" />

    <SolidColorBrush x:Key="Brush.Item.Over" Color="{StaticResource Color.Gray6}" />
    <SolidColorBrush x:Key="Brush.Item.Selected" Color="{StaticResource Color.Accent2}" />
    <SolidColorBrush x:Key="Brush.Item.SelectedOver" Color="{StaticResource Color.Accent3}" />

    <SolidColorBrush x:Key="Brush.ComboBox.Normal" Color="{StaticResource Color.Gray9}" />
    <SolidColorBrush x:Key="Brush.ComboBox.Over" Color="{StaticResource Color.Gray6}" />
    <SolidColorBrush x:Key="Brush.ComboBox.Pressed" Color="{StaticResource Color.Gray5}" />
    <SolidColorBrush x:Key="Brush.ComboBox.Edit" Color="{StaticResource Color.White}" />

    <SolidColorBrush x:Key="Brush.TabControl.Normal" Color="{StaticResource Color.Gray8}" />
    <SolidColorBrush x:Key="Brush.TabControl.Over" Color="{StaticResource Color.Gray9}" />
    <SolidColorBrush x:Key="Brush.TabControl.Selected" Color="{StaticResource Color.Accent2}" />

    <SolidColorBrush x:Key="Brush.TreeView.Collapsed" Color="{StaticResource Color.Gray1}" />
    <SolidColorBrush x:Key="Brush.TreeView.Expanded" Color="{StaticResource Color.Black}" />
    <SolidColorBrush x:Key="Brush.TreeView.Over" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="Brush.TreeView.SelectedOver" Color="{StaticResource Color.Accent0}" />

    <SolidColorBrush x:Key="Brush.ToolBar.Normal" Color="{StaticResource Color.Gray8}" />
    <SolidColorBrush x:Key="Brush.ToolBar.Over" Color="{StaticResource Color.Gray6}" />
    <SolidColorBrush x:Key="Brush.ToolBar.Pressed" Color="{StaticResource Color.Gray5}" />
    <SolidColorBrush x:Key="Brush.ToolBar.Checked" Color="{StaticResource Color.Accent2}" />

    <sys:Double x:Key="Size.ScrollBar">8</sys:Double>
    <sys:Double x:Key="Size.GroupBox.Border">1</sys:Double>

    <Thickness x:Key="Border.Normal">0</Thickness>
    <Thickness x:Key="Border.Box">1</Thickness>
    <Thickness x:Key="Border.Over">1</Thickness>
    <Thickness x:Key="Border.Focus">1</Thickness>

    <Thickness x:Key="Margin.Focus.Uniform">-2</Thickness>
    <Thickness x:Key="Margin.Focus.Padded">-2</Thickness>

    <CornerRadius x:Key="Corner.Border0">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border0.Top">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border0.Bottom">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border0.Left">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border0.Right">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border1">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border1.Top">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border1.Bottom">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border1.Left">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border1.Right">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border2">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border2.Top">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border2.Bottom">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border2.Left">0</CornerRadius>
    <CornerRadius x:Key="Corner.Border2.Right">0</CornerRadius>
    <CornerRadius x:Key="Corner.Focus">0</CornerRadius>
    <CornerRadius x:Key="Corner.Popup">0</CornerRadius>

    <!-- Focus Styles -->
    <Style x:Key="Style.Focus.Outer.Uniform" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border BorderThickness="{StaticResource Border.Focus}" BorderBrush="{StaticResource Brush.Border.Focus}" Margin="{StaticResource Margin.Focus.Uniform}" CornerRadius="{StaticResource Corner.Focus}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.Focus.Outer.Padded" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border BorderThickness="{StaticResource Border.Focus}" BorderBrush="{StaticResource Brush.Border.Focus}" Margin="{StaticResource Margin.Focus.Padded}" CornerRadius="{StaticResource Corner.Focus}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.Focus.Inner.Uniform" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border BorderThickness="{StaticResource Border.Focus}" BorderBrush="{StaticResource Brush.Border.Focus}" CornerRadius="{StaticResource Corner.Focus}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Base Control Styles -->
    <Style x:Key="Style.Base">
        <Setter Property="Control.Foreground" Value="{StaticResource Brush.Foreground.Normal}"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style TargetType="Control" BasedOn="{StaticResource Style.Base}"/>
    <Style TargetType="ContentControl" BasedOn="{StaticResource Style.Base}"/>
    <Style TargetType="HeaderedContentControl" BasedOn="{StaticResource Style.Base}"/>
    <Style TargetType="ItemsControl" BasedOn="{StaticResource Style.Base}">
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    </Style>
    <Style TargetType="HeaderedItemsControl" BasedOn="{StaticResource Style.Base}">
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    </Style>
    <Style TargetType="UserControl" BasedOn="{StaticResource Style.Base}"/>
    <Style TargetType="Page" BasedOn="{StaticResource Style.Base}"/>
    <Style TargetType="Separator">
        <Setter Property="Background" Value="{StaticResource Brush.Background.Normal}"/>
    </Style>

    <!-- Label -->
    <ControlTemplate x:Key="Template.Label" TargetType="Label">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Disabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template" Value="{StaticResource Template.Label}"/>
    </Style>

    <!-- Button/RepeatButton -->
    <ControlTemplate x:Key="Template.ButtonBase" TargetType="ButtonBase">
        <Grid x:Name="TemplateRoot">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource Corner.Border0}"/>
            <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.Glyph.Over}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Over}" TargetName="Border"/>
                <Setter Property="BorderThickness" Value="{StaticResource Border.Over}" TargetName="Border"/>
                <Setter Property="CornerRadius" Value="{StaticResource Corner.Border2}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.Glyph.Pressed}" />
                <Setter Property="Background" Value="{StaticResource Brush.Background.Pressed}" TargetName="Border"/>
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Pressed}" TargetName="Border"/>
                <Setter Property="BorderThickness" Value="{StaticResource Border.Normal}" TargetName="Border"/>
                <Setter Property="CornerRadius" Value="{StaticResource Corner.Border0}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Glyph.Disabled}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Disabled}" TargetName="Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.ButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Glyph.Normal}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Background.Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Normal}"/>
        <Setter Property="BorderThickness" Value="{StaticResource Border.Normal}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,7"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template" Value="{StaticResource Template.ButtonBase}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource Style.Focus.Outer.Uniform}"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource Style.ButtonBase}"/>
    <Style TargetType="RepeatButton" BasedOn="{StaticResource Style.ButtonBase}"/>

    <!-- Hyperlink -->
    <Style TargetType="Hyperlink">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Hyperlink.Normal}"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.Hyperlink.Over}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Disabled}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox -->
    <Style x:Key="Style.TextBox.Placeholder" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Placeholder}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.DisabledPlaceholder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="Template.TextBox" TargetType="TextBox">
        <Grid>
            <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Corner.Border0}"/>
            <Grid>
                <Border x:Name="Placeholder" Padding="{TemplateBinding Padding}" Margin="2,0" Visibility="Collapsed">
                    <TextBlock Text="{Binding (local:Text.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource Style.TextBox.Placeholder}"/>
                </Border>
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"/>
            </Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource Corner.Border1}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Visible" TargetName="Placeholder"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Over}"/>
                <Setter Property="BorderThickness" Value="{StaticResource Border.Over}" TargetName="Border"/>
                <Setter Property="CornerRadius" Value="{StaticResource Corner.Border2}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.TextBox.Focused}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Checked}"/>
                <Setter Property="BorderThickness" Value="{StaticResource Border.Focus}" TargetName="Border"/>
                <Setter Property="CornerRadius" Value="{StaticResource Corner.Border2}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Disabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource Brush.TextBox.Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Normal}"/>
        <Setter Property="BorderThickness" Value="{StaticResource Border.Box}"/>
        <Setter Property="CaretBrush" Value="{StaticResource Brush.Foreground.Normal}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.Background.Checked}"/>
        <Setter Property="SelectionOpacity" Value="0.25"/>
        <Setter Property="Padding" Value="6,7"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Template" Value="{StaticResource Template.TextBox}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Cut"/>
                    <MenuItem Command="ApplicationCommands.Copy"/>
                    <MenuItem Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="IBeam"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBox -->
    <ControlTemplate x:Key="Template.ListBox" TargetType="ListBox">
        <ScrollViewer Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Focusable="False">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>
    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource Template.ListBox}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource Style.Focus.Outer.Uniform}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBoxItem -->
    <ControlTemplate x:Key="Template.ListBoxItem" TargetType="ListBoxItem">
        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.Glyph.Over}" />
                <Setter Property="Background" Value="{StaticResource Brush.Item.Over}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.Item.Selected}" TargetName="Border"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Brush.Item.SelectedOver}" TargetName="Border"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template" Value="{StaticResource Template.ListBoxItem}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource Style.Focus.Inner.Uniform}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollBar -->
    <Style x:Key="Style.ScrollBar.Thumb" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Border x:Name="Thumb" Background="{StaticResource Brush.Thumb.Normal}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Thumb.Over}" TargetName="Thumb"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Thumb.Pressed}" TargetName="Thumb"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Brush.Thumb.Disabled}" TargetName="Thumb"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.ScrollBar.LineButton" TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Delay" Value="250"/>
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Width" Value="{StaticResource Size.ScrollBar}"/>
        <Setter Property="Height" Value="{StaticResource Size.ScrollBar}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border" Background="Transparent">
                        <Path x:Name="Arrow" Data="{TemplateBinding Content}" Stroke="{StaticResource Brush.Thumb.Normal}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Background.Normal}" TargetName="Border"/>
                            <Setter Property="Stroke" Value="{StaticResource Brush.Glyph.Over}" TargetName="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Thumb.Pressed}" TargetName="Border"/>
                            <Setter Property="Stroke" Value="{StaticResource Brush.Glyph.Pressed}" TargetName="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" Value="{StaticResource Brush.Glyph.Disabled}" TargetName="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.ScrollBar.PageButton" TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Delay" Value="250"/>
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Template.ScrollBar.Horizontal" TargetType="ScrollBar">
        <ControlTemplate.Resources>
            <Geometry x:Key="Geometry.LeftArrow">M3,1L0,4 3,7</Geometry>
            <Geometry x:Key="Geometry.RightArrow">M1,1 L4,4 1,7</Geometry>
            <Storyboard x:Key="Anim.ExpandBar" BeginTime="0:0:0.1">
                <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineLeftButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineRightButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.ScaleY" To="1" Duration="0:0:0.1" DecelerationRatio="0.5"/>
            </Storyboard>
            <Storyboard x:Key="Anim.CollapseBar" BeginTime="0:0:2">
                <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineLeftButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineRightButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.2" Duration="0:0:0.15" DecelerationRatio="0.5"/>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="TemplateRoot" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Background" Grid.ColumnSpan="3" Background="{StaticResource Brush.Track.Normal}" Opacity="0"/>
            <RepeatButton x:Name="LineLeftButton" Grid.Column="0" Command="ScrollBar.LineLeftCommand" Style="{StaticResource Style.ScrollBar.LineButton}" Content="{StaticResource Geometry.LeftArrow}" Opacity="0"/>
            <RepeatButton x:Name="LineRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand" Style="{StaticResource Style.ScrollBar.LineButton}" Content="{StaticResource Geometry.RightArrow}" Opacity="0"/>
            <Track x:Name="PART_Track" Grid.Column="1" Orientation="Horizontal">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageLeftButton" Command="ScrollBar.PageLeftCommand" Style="{StaticResource Style.ScrollBar.PageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="IncreaseButton" Command="ScrollBar.PageRightCommand" Style="{StaticResource Style.ScrollBar.PageButton}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource Style.ScrollBar.Thumb}">
                        <Thumb.RenderTransform>
                            <ScaleTransform ScaleY="0.2"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.ExpandBar}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.CollapseBar}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="Template.ScrollBar.Vertical" TargetType="ScrollBar">
        <ControlTemplate.Resources>
            <Geometry x:Key="Geometry.UpArrow">M1,3L4,0 7,3</Geometry>
            <Geometry x:Key="Geometry.DownArrow">M1,1 L4,4 7,1</Geometry>
            <Storyboard x:Key="Anim.ExpandBar" BeginTime="0:0:0.1">
                <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineUpButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineDownButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.ScaleX" To="1" Duration="0:0:0.1" DecelerationRatio="0.5"/>
            </Storyboard>
            <Storyboard x:Key="Anim.CollapseBar" BeginTime="0:0:2">
                <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineUpButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="LineDownButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.2" Duration="0:0:0.15" DecelerationRatio="0.5"/>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="TemplateRoot" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border x:Name="Background" Grid.RowSpan="3" Background="{StaticResource Brush.Track.Normal}" Opacity="0"/>
            <RepeatButton x:Name="LineUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" Style="{StaticResource Style.ScrollBar.LineButton}" Content="{StaticResource Geometry.UpArrow}" Opacity="0"/>
            <RepeatButton x:Name="LineDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" Style="{StaticResource Style.ScrollBar.LineButton}" Content="{StaticResource Geometry.DownArrow}" Opacity="0"/>
            <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageUpButton" Command="ScrollBar.PageUpCommand" Style="{StaticResource Style.ScrollBar.PageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="IncreaseButton" Command="ScrollBar.PageDownCommand" Style="{StaticResource Style.ScrollBar.PageButton}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource Style.ScrollBar.Thumb}" RenderTransformOrigin="0.8,0">
                        <Thumb.RenderTransform>
                            <ScaleTransform ScaleX="0.2"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.ExpandBar}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.CollapseBar}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ForceCursor" Value="True"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="{StaticResource Size.ScrollBar}"/>
                <Setter Property="MinHeight" Value="{StaticResource Size.ScrollBar}"/>
                <Setter Property="Template" Value="{StaticResource Template.ScrollBar.Horizontal}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{StaticResource Size.ScrollBar}"/>
                <Setter Property="MinWidth" Value="{StaticResource Size.ScrollBar}"/>
                <Setter Property="Template" Value="{StaticResource Template.ScrollBar.Vertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer -->
    <ControlTemplate x:Key="Template.ScrollViewer" TargetType="ScrollViewer">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource Corner.Border0}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Decorator x:Name="ShowBarsRef" IsEnabled="False"/>
                <ScrollContentPresenter Grid.RowSpan="2" Grid.ColumnSpan="2" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="{StaticResource Brush.Track.Normal}" IsEnabled="False" Opacity="0"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" MaxHeight="{TemplateBinding MinHeight}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" Opacity="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" Orientation="Vertical" MaxWidth="{TemplateBinding MinWidth}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" Opacity="0"/>
            </Grid>
        </Border>
        <ControlTemplate.Resources>
            <Storyboard x:Key="Anim.ShowBars" BeginTime="0:0:0.1">
                <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.5" DecelerationRatio="0.5"/>
                <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.5" DecelerationRatio="0.5"/>
            </Storyboard>
            <Storyboard x:Key="Anim.HideBars" BeginTime="0:0:2">
                <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
                <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
            </Storyboard>
            <Storyboard x:Key="Anim.ShowCorner" BeginTime="0:0:0.1">
                <DoubleAnimation Storyboard.TargetName="Corner" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
            </Storyboard>
            <Storyboard x:Key="Anim.HideCorner" BeginTime="0:0:2">
                <DoubleAnimation Storyboard.TargetName="Corner" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" AccelerationRatio="0.75" DecelerationRatio="0.25"/>
            </Storyboard>
        </ControlTemplate.Resources>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsEnabled" Value="True" TargetName="ShowBarsRef"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="IsEnabled" Value="True" TargetName="ShowBarsRef"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" SourceName="ShowBarsRef">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.ShowBars}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.HideBars}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_HorizontalScrollBar">
                <Setter Property="IsEnabled" Value="True" TargetName="Corner"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_VerticalScrollBar">
                <Setter Property="IsEnabled" Value="True" TargetName="Corner"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" SourceName="Corner">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.ShowCorner}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.HideCorner}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource Template.ScrollViewer}"/>
    </Style>

</ResourceDictionary>
